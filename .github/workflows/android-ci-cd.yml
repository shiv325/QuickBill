name: Android CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/java-22-openjdk-amd64

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup JDK 22
      - name: Setup JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: gradle

      # 3Ô∏è‚É£ Cache Gradle dependencies
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      # 4Ô∏è‚É£ Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 35
          build-tools: '35.0.0'
          ndk: '25.2.9519653'
          accept-licenses: true

      # 5Ô∏è‚É£ Decode google-services.json from secret
      - name: Add Firebase config
        run: echo "${{ secrets.FIREBASE_JSON_BASE64 }}" | base64 --decode > app/google-services.json

      # 6Ô∏è‚É£ Decode Keystore from secret
      - name: Add Keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > quickbill.jks

      # 7Ô∏è‚É£ Make Gradle executable
      - name: Make Gradle executable
        run: chmod +x gradlew

      # 8Ô∏è‚É£ Auto-increment version code and version name (only on main branch)
      - name: Set Version Code & Version Name
        if: github.ref == 'refs/heads/main'
        run: |
          VERSION_CODE=$(git rev-list --count HEAD)
          VERSION_NAME="1.$(date +'%Y%m%d').${VERSION_CODE}"
          echo "VERSION_CODE=${VERSION_CODE}" >> $GITHUB_ENV
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV
          echo "versionCode=${VERSION_CODE}" > version.properties
          echo "versionName=${VERSION_NAME}" >> version.properties

      
      # 9Ô∏è‚É£ Build Debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace

      # üîü Run Unit Tests
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest --stacktrace

      # 1Ô∏è‚É£1Ô∏è‚É£ Run Instrumentation Tests on Emulator
      - name: Run Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          arch: x86_64
          target: google_apis
          script: ./gradlew connectedDebugAndroidTest --stacktrace

      # 1Ô∏è‚É£2Ô∏è‚É£ Build and Sign Release APK (only on main branch)
      - name: Build Release APK
        if: github.ref == 'refs/heads/main'
        run: ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=quickbill.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} \
          -PversionCode=${{ env.VERSION_CODE }}

      # 1Ô∏è‚É£3Ô∏è‚É£ Upload APK Artifacts
      - name: Upload APKs
        uses: actions/upload-artifact@v3
        with:
          name: quickbill-apks
          path: |
            app/build/outputs/apk/debug/app-debug.apk
            app/build/outputs/apk/release/app-release.apk

      # 1Ô∏è‚É£4Ô∏è‚É£ Deploy Release APK to Firebase App Distribution
      - name: Deploy to Firebase
        if: github.ref == 'refs/heads/main'
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: "testers"
          file: app/build/outputs/apk/release/app-release.apk

      # 1Ô∏è‚É£5Ô∏è‚É£ Create GitHub Tag for Release (optional)
      - name: Create GitHub Tag
        if: github.ref == 'refs/heads/main'
        run: |
          VERSION_NAME="v$(date +'%Y.%m.%d')-${{ env.VERSION_CODE }}"
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag -a "$VERSION_NAME" -m "Release $VERSION_NAME"
          git push origin "$VERSION_NAME"
