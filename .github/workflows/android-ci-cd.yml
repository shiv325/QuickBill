name: Android CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/java-22-openjdk-amd64

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup JDK 22
      - uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: gradle

      # 3Ô∏è‚É£ Cache Gradle
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4Ô∏è‚É£ Setup Android SDK
      - uses: android-actions/setup-android@v3
        with:
          api-level: 35
          build-tools: '35.0.0'
          ndk: '25.2.9519653'

      # 5Ô∏è‚É£ Decode google-services.json from secret
      - run: echo "${{ secrets.FIREBASE_JSON_BASE64 }}" | base64 --decode > app/google-services.json

      # 6Ô∏è‚É£ Decode Keystore from secret
      - run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > quickbill.jks

      # 7Ô∏è‚É£ Make Gradle executable
      - run: chmod +x gradlew

      # 8Ô∏è‚É£ Build Debug APK
      - run: ./gradlew assembleDebug --stacktrace

      # 9Ô∏è‚É£ Run Unit Tests
      - run: ./gradlew testDebugUnitTest --stacktrace

      # üîü Run Instrumentation Tests (emulator)
      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          arch: x86_64
          target: google_apis
          script: ./gradlew connectedDebugAndroidTest --stacktrace

      # 1Ô∏è‚É£1Ô∏è‚É£ Build and sign Release APK (only on main branch)
      - if: github.ref == 'refs/heads/main'
        run: ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=quickbill.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      # 1Ô∏è‚É£2Ô∏è‚É£ Upload APK artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: quickbill-apks
          path: |
            app/build/outputs/apk/debug/app-debug.apk
            app/build/outputs/apk/release/app-release.apk

      # 1Ô∏è‚É£3Ô∏è‚É£ Deploy Release APK to Firebase App Distribution
      - if: github.ref == 'refs/heads/main'
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}          # Firebase App ID (from Firebase console)
          token: ${{ secrets.FIREBASE_TOKEN }}           # Firebase CI token
          groups: "testers"                              # Tester groups
          file: app/build/outputs/apk/release/app-release.apk
